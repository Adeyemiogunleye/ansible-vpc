- hosts: localhost
  connection: local
  gather_facts: False
  tasks: 
    - name: Import VPC variables
      include_vars: Vars/vpc_setup

    - name: Create vprofile VPC
      ec2_vpc_net:
        name: "{{vpc_name}}"
        cidr_block: "{{vpcCidr}}"
        region: "{{region}}"
        dns_support: true
        dns_hostnames: true
        tenancy: default
        state: "{{state}}"
      register: VpcOut
    #- debug:
     #   var: VpcOut

    - name: Create public Subnet
      amazon.aws.ec2_vpc_subnet:
        state: present
        vpc_id: "{{VpcOut.vpc.id}}"
        cidr: "{{PubSub1Cidr}}"
        region: "{{region}}"
        az: "{{zone1}}"
        state: present
        map_public: true
        tags:
          Name: Vprofile-pubsub1
      register: vpc_pubsub1

    - name: Create public Subnet2
      amazon.aws.ec2_vpc_subnet:
        state: present
        vpc_id: "{{VpcOut.vpc.id}}"
        cidr: "{{PubSub2Cidr}}"
        region: "{{region}}"
        az: "{{zone2}}"
        state: present
        map_public: true
        tags:
          Name: Vprofile-pubsub2
      register: vpc_pubsub2
    
    - name: Create public Subnet3
      amazon.aws.ec2_vpc_subnet:
        state: present
        vpc_id: "{{VpcOut.vpc.id}}"
        cidr: "{{PubSub3Cidr}}"
        region: "{{region}}"
        az: "{{zone3}}"
        state: present
        map_public: true
        tags:
          Name: Vprofile-pubsub3
      register: vpc_pubsub3
    
    - name: Create private Subnet1
      amazon.aws.ec2_vpc_subnet:
        state: present
        vpc_id: "{{VpcOut.vpc.id}}"
        cidr: "{{PrivSub1Cidr}}"
        region: "{{region}}"
        az: "{{zone1}}"
        state: present
        map_public: true
        tags:
          Name: Vprofile-prisub1
      register: vpc_prisub1
    
    - name: Create private Subnet2
      amazon.aws.ec2_vpc_subnet:
        state: present
        vpc_id: "{{VpcOut.vpc.id}}"
        cidr: "{{PrivSub2Cidr}}"
        region: "{{region}}"
        az: "{{zone2}}"
        state: present
        map_public: true
        tags:
          Name: Vprofile-prisub2
      register: vpc_prisub2
    
    - name: Create private Subnet3
      amazon.aws.ec2_vpc_subnet:
        state: present
        vpc_id: "{{VpcOut.vpc.id}}"
        cidr: "{{PrivSub3Cidr}}"
        region: "{{region}}"
        az: "{{zone3}}"
        state: present
        map_public: true
        tags:
          Name: Vprofile-prisub3
      register: vpc_prisub3
    
    - name: Create Internet gateway
      amazon.aws.ec2_vpc_igw:
        vpc_id: "{{ VpcOut.vpc.id }}"
        state: present
        region: "{{ region }}"
        tags:
          Name: vpro-igw
      register: vpc_igw
    
    - name: Set up public subnet route table
      amazon.aws.ec2_vpc_route_table:
        vpc_id: "{{ VpcOut.vpc.id }}"
        region: "{{region}}"
        tags:
          Name: Vpro_route_table
        subnets:
          - "{{ vpc_pubsub1.subnet.id }}"
          - "{{ vpc_pubsub2.subnet.id }}"
          - "{{ vpc_pubsub3.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ vpc_igw.gateway_id }}"
      register: public_route_table
    
    - name: Create new nat gateway.
      amazon.aws.ec2_vpc_nat_gateway:
        state: present
        subnet_id: "{{vpc_pubsub1.subnet.id}}"
        region: "{{region}}"
        wait: true
        if_exist_do_not_create: true
      register: vpro_natgw
    
    - name: Set up private subnet route table
      amazon.aws.ec2_vpc_route_table:
        vpc_id: "{{ VpcOut.vpc.id }}"
        region: "{{region}}"
        tags:
          Name: Vpro_route_table
        subnets:
          - "{{ vpc_prisub1.subnet.id }}"
          - "{{ vpc_prisub2.subnet.id }}"
          - "{{ vpc_prisub3.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ vpro_natgw.nat.gateway_id }}"
      register: private_route_table